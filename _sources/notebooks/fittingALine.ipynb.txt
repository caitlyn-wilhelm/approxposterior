{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Fitting a Line\n",
    "\n",
    "---\n",
    "\n",
    "In this notebook, we reproduce the classic \"Fitting a Model to Data\" example from emcee, https://emcee.readthedocs.io/en/latest/tutorials/line/, fitting a line with uncertainties, using both emcee and ```approxposterior```. This notebook demonstrates how ```approxposterior``` can be used to perform accurate Bayesian inference of model parameters given data with uncertainties."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/dflemin3/anaconda3/lib/python3.6/site-packages/h5py/__init__.py:34: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.\n",
      "  from ._conv import register_converters as _register_converters\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import emcee\n",
    "from scipy.optimize import minimize\n",
    "import corner\n",
    "import george\n",
    "\n",
    "from approxposterior import approx, gpUtils as gpu\n",
    "\n",
    "# Tidy up the notebook (I'm not sweeping errors under the rug, I swear!)\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Data**\n",
    "\n",
    "---\n",
    "\n",
    "First, we generate data according to $y_i = m * x_i + b + \\epsilon_i$ where $\\epsilon_i$ are indepedent, Gaussian errors, for each measurement $i$. Then we'll plot the data to see what it looks like, with the grey line being the true, underlying model."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x576 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Set seed for reproducibility.\n",
    "np.random.seed(42)\n",
    "\n",
    "# Choose the \"true\" parameters.\n",
    "mTrue = -0.9594\n",
    "bTrue = 4.294\n",
    "\n",
    "# Generate some synthetic data from the model.\n",
    "N = 50\n",
    "x = np.sort(10*np.random.rand(N))\n",
    "obserr = 0.5 # Amplitude of noise term\n",
    "obs = mTrue * x + bTrue # True model\n",
    "obs += obserr * np.random.randn(N) # Add some random noise\n",
    "\n",
    "# Now plot it to see what the data looks like\n",
    "fig, ax = plt.subplots(figsize=(8,8))\n",
    "\n",
    "ax.errorbar(x, obs, yerr=obserr, fmt=\".k\", capsize=0)\n",
    "x0 = np.linspace(0, 10, 500)\n",
    "ax.plot(x0, mTrue*x0+bTrue, \"k\", alpha=0.3, lw=3)\n",
    "ax.set_xlim(0, 10)\n",
    "ax.set_xlabel(\"x\")\n",
    "ax.set_ylabel(\"obs\");"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Inference**\n",
    "\n",
    "---\n",
    "\n",
    "Now we want to infer posterior probability distributions for our linear model's parameters, $\\theta$, i.e slope and intercept, given the data and uncertainties, D, via Bayes' Theorem: $p(\\theta | D) \\propto l(D | \\theta)p(\\theta)$ where $l(D|\\theta)$ is the likelihood of the data for a given set of model parameters, and $p(\\theta)$ is our assume prior probability of a given $\\theta$. We sample the posterior distribution using the emcee MCMC code.  See the emcee example (https://emcee.readthedocs.io/en/latest/tutorials/line/) for more details of this procedure."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Define the loglikelihood function\n",
    "def logLikelihood(theta, x, obs, obserr):\n",
    "  \n",
    "    # Model parameters\n",
    "    theta = np.array(theta)\n",
    "    m, b = theta\n",
    "    \n",
    "    # Model predictions given parameters\n",
    "    model = m * x + b\n",
    "    \n",
    "    # Likelihood of data given model parameters\n",
    "    return -0.5*np.sum((obs-model)**2/obserr**2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Define the logprior function\n",
    "def logPrior(theta):\n",
    "    \n",
    "    # Model parameters\n",
    "    theta = np.array(theta)\n",
    "    m, b = theta\n",
    "    \n",
    "    # Probability of model parameters: flat prior\n",
    "    if -5.0 < m < 0.5 and 0.0 < b < 10.0:\n",
    "        return 0.0\n",
    "    return -np.inf"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Define logprobability function: l(D|theta) * p(theta)\n",
    "def logProbability(theta, x, obs, obserr):\n",
    "        \n",
    "    lp = logPrior(theta)\n",
    "    if not np.isfinite(lp):\n",
    "        return -np.inf\n",
    "    return lp + logLikelihood(theta, x, obs, obserr)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now that we've set up the required functions, we initialize our MCMC sampler in emcee, pick an initial state for the walkers, and run the MCMC!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Randomly initialize walkers\n",
    "p0 = np.random.randn(32, 2)\n",
    "nwalkers, ndim = p0.shape\n",
    "\n",
    "# Set up MCMC sample object\n",
    "sampler = emcee.EnsembleSampler(nwalkers, ndim, logProbability, args=(x, obs, obserr))\n",
    "\n",
    "# Run the MCMC for 5000 iteratios\n",
    "sampler.run_mcmc(p0, 5000);"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The MCMC is complete, so let's examine the joint and marginal posterior probability distributions it derived for the model parameters."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 396x396 with 4 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig = corner.corner(sampler.flatchain,\n",
    "                    quantiles=[0.16, 0.5, 0.84],\n",
    "                    truths=[mTrue, bTrue],\n",
    "                    labels=[\"m\", \"b\"], range=([-1.1,-0.8],[3.7, 4.8]),\n",
    "                    plot_contours=True, show_titles=True);"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Looks good!"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Inference with ```approxposterior```**\n",
    "\n",
    "---\n",
    "\n",
    "Now let's see if we can derive similar constraints using ```approxposterior```.\n",
    "\n",
    "First, ```approxposterior``` requires a function that samples model parameters from the prior distributions."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "def sampleFunction(n):\n",
    "    \"\"\"\n",
    "    docs\n",
    "\n",
    "    Parameters\n",
    "    ----------\n",
    "    n : int\n",
    "        Number of samples\n",
    "\n",
    "    Returns\n",
    "    -------\n",
    "    sample : floats\n",
    "        n x 3 array of floats samples from the prior\n",
    "    \"\"\"\n",
    "\n",
    "    # Sample model parameters given prior distributions\n",
    "    m = np.random.uniform(low=-5, high=0.5, size=(n))\n",
    "    b = np.random.uniform(low=0, high=10, size=(n))\n",
    "    \n",
    "    return np.array([m,b]).T\n",
    "# end function"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Define the ```approxposterior``` parameters."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Define algorithm parameters\n",
    "m0 = 20                           # Initial size of training set\n",
    "m = 10                            # Number of new points to find each iteration\n",
    "nmax = 5                          # Maximum number of iterations\n",
    "Dmax = 1                          # KL-Divergence convergence limit\n",
    "kmax = 5                          # Number of iterations for Dmax convergence to kick in\n",
    "nKLSamples = 100000               # Number of samples from posterior to use to calculate KL-Divergence\n",
    "bounds = ((-5,0.5), (0.0,10.0))   # Prior bounds\n",
    "algorithm = \"BAPE\"                # Use the Kandasamy et al. (2015) formalism\n",
    "\n",
    "# emcee MCMC parameters: Use the same MCMC parameters as the emcee-only analysis\n",
    "samplerKwargs = {\"nwalkers\" : 32}        # emcee.EnsembleSampler parameters\n",
    "mcmcKwargs = {\"iterations\" : 5000} # emcee.EnsembleSampler.run_mcmc parameters\n",
    "\n",
    "# Data and uncertainties that we'll condition approxposterior on\n",
    "args = (x, obs, obserr)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Here we create the initial training set by running the true forward model $m_0$ times.  ```approxposterior``` learns on this training set and, each iteration, runs the forward model $m$ additional times in regions of parameter space that will most improve its owns predictive performance, iteratively improving the posterior distribution estimate."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Create a training set to condition the GP\n",
    "\n",
    "# Randomly sample initial conditions from the prior\n",
    "theta = np.array(sampleFunction(m0))\n",
    "\n",
    "# Evaluate forward model to compute log likelihood + lnprior for each theta\n",
    "y = list()\n",
    "for ii in range(len(theta)):\n",
    "    y.append(logLikelihood(theta[ii], *args) + logPrior(theta[ii]))\n",
    "y = np.array(y)\n",
    "\n",
    "# We'll create the initial GP using approxposterior's built-in default\n",
    "# initialization.  This default typically works well in many applications.\n",
    "gp = gpu.defaultGP(theta, y)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now initialize the ```ApproxPosterior``` object and we're ready to go!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "ap = approx.ApproxPosterior(theta=theta,                   # Initial model parameters for inputs\n",
    "                            y=y,                           # Logprobability of each input\n",
    "                            gp=gp,                         # Initialize Gaussian Process\n",
    "                            lnprior=logPrior,              # logprior function\n",
    "                            lnlike=logLikelihood,          # loglikelihood function\n",
    "                            priorSample=sampleFunction,    # Prior sample function\n",
    "                            algorithm=algorithm,           # BAPE, AGP, or ALTERNATE\n",
    "                            bounds=bounds)                 # Parameter bounds"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Run ```approxposterior```! Note that we set cache to False so ```approxposterior``` only saves the most recent sampler and MCMC chain instead of saving each full MCMC chain to a local HD5f file (see emcee v3 documentation for more details on how emcee caches data)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Run!\n",
    "ap.run(m=m, nmax=nmax, Dmax=Dmax, kmax=kmax, estBurnin=True,\n",
    "       nKLSamples=nKLSamples, mcmcKwargs=mcmcKwargs, cache=False,\n",
    "       samplerKwargs=samplerKwargs, verbose=False, args=args, onlyLastMCMC=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "As before, let's plot the joint and marginal posterior probability distributions to see how ```approxposterior``` did. In addition, as red points, we'll plot where ```approxposterior``` decided to evaluate the forward model to improve its own performance.  As you'll see below, ```approxposterior``` preferentially runs the forward model in regions of high posterior probability density - it doesn't waste time on low likelihood regions of parameter space!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 396x396 with 4 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "samples = ap.sampler.get_chain(discard=ap.iburns[-1], flat=True, thin=ap.ithins[-1])\n",
    "\n",
    "fig = corner.corner(samples, quantiles=[0.16, 0.5, 0.84], truths=[mTrue, bTrue],\n",
    "                    labels=[\"m\", \"b\"], show_titles=True, scale_hist=True,\n",
    "                    plot_contours=True, range=([-1.1,-0.8],[3.7, 4.8]));\n",
    "\n",
    "# Plot where forward model was evaluated\n",
    "fig.axes[2].scatter(ap.theta[:,0], ap.theta[:,1], s=8, color=\"red\", zorder=20);"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The predictions are nearly identical to the true MCMC!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
